use mavenmovies;
-- #Basic Aggregate Functions:
-- Question 1:
-- Retrieve the total number of rentals made in the Sakila database.
-- Hint: Use the COUNT() function.
select count(rental_id) from rental;

-- Question 2:
-- Find the average rental duration (in days) of movies rented from the Sakila database.
-- Hint: Utilize the AVG() function.
SELECT 
    avg(rental_duration)
FROM
    film;

-- #String Functions:
-- Question 3:
-- Display the first name and last name of customers in uppercase.
-- Hint: Use the UPPER () function.
select upper(first_name), upper(Last_name) from customer;

-- Question 4:
-- Extract the month from the rental date and display it alongside the rental ID.
-- Hint: Employ the MONTH() function.
select rental_id, rental_date, month(rental_date) from rental;

-- #Group By:
-- Question 5:
-- Retrieve the count of rentals for each customer (display customer ID and the count of rentals).
-- Hint: Use COUNT () in conjunction with GROUP BY.
 select customer_id, count(rental_id) from payment group by customer_id;

-- Question 6:
-- Find the total revenue generated by each store.
-- Hint: Combine SUM() and GROUP BY.
select customer_id, sum(amount) from payment group by customer_id;

-- Question 7:
-- Display the title of the movie, customer s first name, and last name who rented it.
-- Hint: Use JOIN between the film, inventory, rental, and customer tables.

SELECT 
    title, first_name, last_name, rental_id
FROM
    film
        INNER JOIN
    inventory ON film.film_id = inventory.film_id
        INNER JOIN
    rental ON inventory.inventory_id = rental.rental_id
        INNER JOIN
    customer ON rental.customer_id = customer.address_id;
    
--     Question 8: 

-- Retrieve the names of all actors who have appeared in the film "Gone with the Wind." 
-- Hint: Use JOIN between the film actor, film, and actor tables. 

SELECT 
    *
FROM
    actor
        INNER JOIN
    film_actor ON actor.actor_id = film_actor.actor_id
        INNER JOIN
    film ON film_actor.film_id = film.film_id;

-- Question 1: 

-- Determine the total number of rentals for each category of movies. 
-- Hint: JOIN film_category, film, and rental tables, then use cOUNT () and GROUP BY. 

select c.name, count(f.rental_rate) as total_rental from category c inner join film_category fc on c.category_id = fc.category_id 
inner join film f on fc.film_id = f.film_id group by c.name order by total_rental desc; 


-- Question 2: 

-- Find the average rental rate of movies in each language. 
-- Hint: JOIN film and language tables, then use AVG () and GROUP BY. 

select l.name, avg(f.rental_rate) from language l inner join film f on l.language_id = f.language_id group by l.name;

-- Question 3: 

-- Retrieve the customer names along with the total amount they've spent on rentals. 
-- Hint: JOIN customer, payment, and rental tables, then use SUM() and GROUP BY. 

select c.first_name, c.last_name, sum(p.amount) from customer c inner join payment p on c.customer_id = p.customer_id
inner join rental r on p.rental_id = r.rental_id group by c.customer_id;

-- Question 4: 

-- List the titles of movies rented by each customer in a particular city (e.g., 'London'). 
-- Hint: JOIN customer, address, city, rental, inventory, and film tables, then use GROUP BY. 

select f.title, c.first_name, c.last_name, ct.city from film f inner join inventory i on f.film_id = i.film_id
inner join rental r on i.inventory_id = r.inventory_id inner join customer c on r.customer_id = c.customer_id 
inner join address a on c.address_id = a.address_id inner join city ct on a.city_id = ct.city_id where city = "london";
 
-- Question 5: 

-- Display the top 5 rented movies along with the number of times they've been rented. 
-- Hint: JOIN film, inventory, and rental tables, then use cOUNT() and GROUP BY, and limit the results. 

select f.title, count(r.rental_id) as count_rental from film f inner join inventory i on f.film_id = i.film_id 
inner join rental r on i.inventory_id = r.inventory_id group by title order by count_rental desc limit 5;

-- Question 6: 

-- Determine the customers who have rented movies from both stores (store ID 1 and store ID 2). 
-- Hint: Use JOINS with rental, inventory, and customer tables and consider COUNT() and GROUP BY. 

select c.first_name, c.last_name, c.store_id from customer c inner join inventory i on c.store_id = i.store_id
inner join rental r on i.inventory_id = r.inventory_id;